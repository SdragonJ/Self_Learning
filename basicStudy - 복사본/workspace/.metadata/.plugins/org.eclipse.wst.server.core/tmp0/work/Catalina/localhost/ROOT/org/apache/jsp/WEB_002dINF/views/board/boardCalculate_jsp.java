/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.39
 * Generated at: 2023-03-27 08:53:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardCalculate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/views/board/../common/nav.jsp", Long.valueOf(1679907012799L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1676374159835L));
    _jspx_dependants.put("jar:file:/C:/basicStudy/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/board_setting/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/board/../common/common.jsp", Long.valueOf(1675825434456L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write("\r\n");
      out.write("<script src=\"//code.jquery.com/jquery-3.2.1.min.js\"></script>\r\n");
      out.write("<!-- 합쳐지고 최소화된 최신 CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css\">\r\n");
      out.write("<!-- 부가적인 테마 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css\">\r\n");
      out.write("<!-- 합쳐지고 최소화된 최신 자바스크립트 -->\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\tconsole.log(\"[common.jsp] 적용\")\r\n");
      out.write("</script>");
      out.write('\n');
      out.write("\r\n");
      out.write("<ul class=\"nav nav-tabs\">\r\n");
      out.write("\t<li role=\"presentation\" class=\"home\"><a href=\"/board/home\">Home</a></li>\r\n");
      out.write("\t<li role=\"presentation\" class=\"dropdown board\">\r\n");
      out.write("\t<a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-expanded=\"false\"> 게시판<span class=\"caret\"></span></a>\r\n");
      out.write("\t\t<ul class=\"dropdown-menu\" role=\"menu\">\r\n");
      out.write("\t\t\t<li><a href=\"/board/board\">게시판 목록</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"/board/boardAjaxMain\">Ajax 게시판 목록</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"/board/board99\">구구단, 글자색변경</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</li>\r\n");
      out.write("\t<li role=\"presentation\" class=\"calculate\"><a href=\"/board/calculate\">계산기</a></li>\r\n");
      out.write("\t<li role=\"presentation\" class=\"calendar\"><a href=\"/board/calendar\">캘린더(공사중....)</a></li>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</ul>\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\tconsole.log(\"[네비게이션바] 적용 jsp\");\r\n");
      out.write("\tvar loc = location.pathname.split(\"/\")[2];\r\n");
      out.write("\tconsole.log(\"loc => \"+loc);\r\n");
      out.write("\t// 해당 페이지에 맞는 네비게이션바 강조 옵션 적용\r\n");
      out.write("\tif(loc.indexOf(\"board\") > -1){\r\n");
      out.write("\t\t$(\".board\").addClass(\"active\");\r\n");
      out.write("\t}else if(loc.indexOf(\"home\") > -1){\r\n");
      out.write("\t\t$(\".home\").addClass(\"active\");\r\n");
      out.write("\t}else if(loc.indexOf(\"create\") > -1){\r\n");
      out.write("\t\t$(\".board\").addClass(\"active\");\r\n");
      out.write("\t}else if(loc.indexOf(\"listDetail\") > -1){\r\n");
      out.write("\t\t$(\".board\").addClass(\"active\");\r\n");
      out.write("\t}else if(loc.indexOf(\"update\") > -1){\r\n");
      out.write("\t\t$(\".board\").addClass(\"active\");\r\n");
      out.write("\t}else if(loc.indexOf(\"board99\") > -1){\r\n");
      out.write("\t\t$(\".board\").addClass(\"active\");\r\n");
      out.write("\t}else if(loc.indexOf(\"calculate\") > -1){\r\n");
      out.write("\t\t$(\".calculate\").addClass(\"active\");\r\n");
      out.write("\t}else if(loc.indexOf(\"calendar\") > -1){\r\n");
      out.write("\t\t$(\".calendar\").addClass(\"active\")\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("</script>");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<meta charset=\"UTF-8\">\n");
      out.write("\t<title>계산기</title>\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("\t table {\n");
      out.write("            border-collapse: collapse;\n");
      out.write("        }\n");
      out.write("        td {\n");
      out.write("            padding: 5px 10px;\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("        input {\n");
      out.write("            text-align: right;\n");
      out.write("            border: none;\n");
      out.write("        }\n");
      out.write("        input:focus {\n");
      out.write("            outline: none;\n");
      out.write("        }\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t<br>\n");
      out.write("\t<table border=\"1\">\n");
      out.write("        <tr>\n");
      out.write("\t        <td colspan=\"4\">\n");
      out.write("\t            <input type=\"text\" id=\"display\">\n");
      out.write("\t        </td>\n");
      out.write("\t    </tr>\n");
      out.write("\t    <tr>\n");
      out.write("\t        <td colspan=\"4\">\n");
      out.write("\t            <input type=\"text\" id=\"result\" disabled>\n");
      out.write("\t        </td>\n");
      out.write("\t    </tr>\n");
      out.write("\t    <tr>\n");
      out.write("\t        <td colspan=\"3\" onclick=\"reset()\">clear</td>\n");
      out.write("\t        <td onclick=\"add('/')\">/</td>\n");
      out.write("\t    </tr>\n");
      out.write("\t    <tr>\n");
      out.write("\t        <td onclick=\"add(7)\">7</td>\n");
      out.write("\t        <td onclick=\"add(8)\">8</td>\n");
      out.write("\t        <td onclick=\"add(9)\">9</td>\n");
      out.write("\t        <td onclick=\"add('*')\">*</td>\n");
      out.write("\t    </tr>\n");
      out.write("\t    <tr>\n");
      out.write("\t        <td onclick=\"add(4)\">4</td>\n");
      out.write("\t        <td onclick=\"add(5)\">5</td>\n");
      out.write("\t        <td onclick=\"add(6)\">6</td>\n");
      out.write("\t        <td onclick=\"add('-')\">-</td>\n");
      out.write("\t    </tr>\n");
      out.write("\t    <tr>\n");
      out.write("\t        <td onclick=\"add(1)\">1</td>\n");
      out.write("\t        <td onclick=\"add(2)\">2</td>\n");
      out.write("\t        <td onclick=\"add(3)\">3</td>\n");
      out.write("\t        <td onclick=\"add('+')\">+</td>\n");
      out.write("\t    </tr>\n");
      out.write("\t    <tr>\n");
      out.write("\t        <td colspan=\"2\" onclick=\"add(0)\">0</td>\n");
      out.write("\t        <td onclick=\"add('.')\">.</td>\n");
      out.write("\t        <td onclick=\"calculate()\">=</td>\n");
      out.write("\t    </tr>\n");
      out.write("    </table>\n");
      out.write("    \n");
      out.write("<script>\n");
      out.write("\tfunction add(char) {\n");
      out.write("\t    var display = document.getElementById('display'); // 우리가 식을 입력할 input 태그를 불러옵니다.\n");
      out.write("\t    // display.value는 input 태그 안에 들어 있는 값을 의미합니다.\n");
      out.write("\t    display.value = display.value + char;\n");
      out.write("\t    // display.value += char; 로 쓸 수도 있습니다.\n");
      out.write("\t    // input 태그의 값 뒤에 char 문자를 추가해 주는 역할을 합니다.\n");
      out.write("\t}\n");
      out.write("\tfunction calculate() {\n");
      out.write("\t    var display = document.getElementById('display');\n");
      out.write("\t    var result = eval(display.value); // 식을 계산하고 result 변수에 저장합니다.\n");
      out.write("\t    document.getElementById('result').value = result;\n");
      out.write("\t}\n");
      out.write("\tfunction reset() {\n");
      out.write("\t    document.getElementById('display').value = \"\";\n");
      out.write("\t    document.getElementById('result').value = \"\";\n");
      out.write("\t}\n");
      out.write("</script>\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
